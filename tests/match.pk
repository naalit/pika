type Bool of
  True
  False
where
  fun not (b: Bool) = case b of
    True => False
    False => True
  end
end

type Test of
  Thing Type Type
end
fun test (t: Test) = case t of
  Test.Thing a b => a -> b
end

type Option a of
  None
  Some a
where
  fun unwrap_or [a] (self : Option a) (default : a) : a = case self of
    None => default
    Some x => x
  end
end

fun my_fun (x : Option Type) = Option.unwrap_or x (Type -> Type)
