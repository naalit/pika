# Implicit effect polymorphism, like Frank's ambient effects
type Option a of
    Some a
    None
where
    fun map [a b] (self : Option a) (f : a -> b) : Option b = case self of
        Some a => Some (f a)
        None => None


# Should print:
# 12
# 0
fun main () with IO = do
    let a : Option I32 = Option.Some [I32] 12
    let b : Option I32 = Option.None
    a.map print
    b.map print
    print 0
